const products = [
  {
    id: 1,
    image: "https://source.unsplash.com/320x240/?cookie",
    title: "Cake 1",
    description: "description 1",
    price: 5,
    discount: 10,
  },
  {
    id: 2,
    image: "https://source.unsplash.com/320x241/?cookie",
    title: "Candy 2",
    description: "description 2",
    price: 6.7,
    discount: undefined,
  },
  {
    id: 3,
    image: "https://source.unsplash.com/320x242/?cookie",
    title: "Cake 2",
    description: "description 3",
    price: 4.3,
    discount: 15,
  },
  {
    id: 4,
    image: "https://source.unsplash.com/320x243/?cookie",
    title: "Cake 2",
    description: "description 3",
    price: 12,
    discount: undefined,
  },
];

const coupons = [
  {
    id: 1,
    title: "Happy New Year 2021",
    code: "HPNY2021",
    discount: 10,
    public: true,
  },
  {
    id: 2,
    title: "Merry Christmas",
    code: "MC2020",
    discount: 5,
    public: true,
  },
  {
    id: 3,
    title: "Loyal customers",
    code: "LC2021",
    discount: 5,
    public: false,
  },
];

const cart = [...products];

const shippingMethod = document.querySelector(".cart__shipping-select");
const shippingHTML = document.querySelector(".cart__shipping span");
const totalHTML = document.querySelector(".cart__total span");
const subtotalHTML = document.querySelector(".cart__subtotal span");
const cartTotalItemsHTML = document.querySelector(".cart__header span");
const cartCoupon = document.querySelector(".cart__coupon");

function calculatePrice(price, discount) {
  if (discount) return (price * (100 - discount)) / 100;
  return price;
}

function displayCartContent(items) {
  cartTotalItemsHTML.textContent = `${displayTotalItems()} items`;

  const cartContentHTML = document.querySelector(".cart__content");
  if (Array.isArray(items) && items.length) {
    let html = items
      .map(function ({ id, image, title, description, price, discount }) {
        return `
    <div class="cart__item" data-id="${id}">
        <div class="cart__image">
          <img src="${image}" alt="${title}" />
        </div>

        <div class="cart__item-content">
          <h3 class="cart__item-title">${title}</h3>
          <p class="cart__item-description">$${calculatePrice(price, discount).toFixed(2)}</p>
          <button class="cart__item-remove">remove</button>
        </div>

        <div class="cart__item-control">
          <button class="cart__item-increase">-</button>
          <input type="text" class="cart__item-quantity" value="1" />
          <button class="cart__item-decrease">+</button>
        </div>

        <span class="cart__item-price">$${calculatePrice(price, discount).toFixed(2)}</span>
    </div>
        `;
      })
      .join("");
    cartContentHTML.innerHTML = html;
    displayDiscount();
    handleButtonsInCart();
    handleInputsInCart();
    displayCartFooter();
  } else {
    cartContentHTML.innerHTML = `
        <div class="cart__empty">
          <img src="./empty-cart.png" alt="cart empty" />
          <h4>Your Cart Is Empty :(</h4>
        </div>
    `;
    displayCartFooter();
    handleShippingMethod();
  }
}
function displayTotalItems() {
  let totalItem = 0;
  cart.forEach(function (item) {
    totalItem++;
  });
  return totalItem;
}

function displayDiscount() {
  for (let i = 0; i < cart.length; i++) {
    if (cart[i].discount) {
      let item = document.querySelector(`.cart__item[data-id="${cart[i].id}"]`);

      let spanDiscount = document.createElement("span");
      spanDiscount.classList.add("cart__discount");
      spanDiscount.textContent = `-${cart[i].discount}%`;
      item.querySelector(".cart__image").appendChild(spanDiscount);

      let spanPrice = document.createElement("span");
      spanPrice.textContent = `$${cart[i].price.toFixed(2)}`;
      item.querySelector(".cart__item-description").appendChild(spanPrice);
    }
  }
}

function getSubtotal() {
  const priceInputsHTML = [...document.querySelectorAll(".cart__item-price")];

  let arrayPrice = priceInputsHTML.map((e) => {
    return parseFloat(e.textContent.slice(1, e.textContent.length - 1));
  });

  return arrayPrice.reduce(function (pre, curr) {
    return pre + curr;
  }, 0);
}

function displayCartFooter() {
  let subtotal = getSubtotal();

  let shippingCost = parseFloat(shippingMethod.value);
  if (subtotal > 0) {
    subtotalHTML.textContent = `$${subtotal.toFixed(2)}`;
    shippingHTML.textContent = `$${shippingCost.toFixed(2)}`;
    totalHTML.textContent = `$${(subtotal + shippingCost).toFixed(2)}`;
    handleShippingMethod();
  } else {
    subtotalHTML.textContent = `$0.00`;
    totalHTML.textContent = `$0.00`;
    shippingHTML.textContent = `$0.00`;
  }
}

function handleShippingMethod() {
  let subtotal = getSubtotal();
  let shippingCost = parseFloat(shippingMethod.value);
  shippingMethod.addEventListener("change", function () {
    if (subtotal > 0) {
      shippingCost = parseFloat(shippingMethod.value);
      shippingHTML.textContent = `$${shippingCost.toFixed(2)}`;
      totalHTML.textContent = `$${(subtotal + shippingCost).toFixed(2)}`;
    } else {
      subtotalHTML.textContent = `$0.00`;
      totalHTML.textContent = `$0.00`;
      shippingHTML.textContent = `$0.00`;
    }
  });
}

function handleInputsInCart() {
  const inputsHTML = [...document.querySelectorAll("input")];
  inputsHTML.forEach(function (inputHTML) {
    if (inputHTML.classList.contains("cart__item-quantity")) {
      inputHTML.addEventListener("blur", function (event) {
        let id = event.target.parentElement.parentElement.dataset.id;
        if (event.target.value < 2) {
          alert("Số lượng sản phẩm tối thiểu là 1");
          event.target.value = 1;
          updatePrice(id, event.target.value);
          return;
        } else updatePrice(id, event.target.value);
      });
    }
  });
}

function handleButtonsInCart() {
  const buttonsHTML = [...document.querySelectorAll("button")];

  buttonsHTML.forEach(function (buttonHTML) {
    if (buttonHTML.classList.contains("cart__item-increase"))
      buttonHTML.addEventListener("click", function (event) {
        let id = event.target.parentElement.parentElement.dataset.id;
        let inputHTML = event.target.nextElementSibling;
        if (inputHTML.value < 2) return;
        let quantity = inputHTML.value--;
        updatePrice(id, quantity - 1);
      });
    if (buttonHTML.classList.contains("cart__item-decrease"))
      buttonHTML.addEventListener("click", function (event) {
        let id = event.target.parentElement.parentElement.dataset.id;
        let inputHTML = event.target.previousElementSibling;
        let quantity = inputHTML.value++;
        updatePrice(id, quantity + 1);
      });

    if (buttonHTML.classList.contains("cart__item-remove"))
      buttonHTML.addEventListener("click", function (event) {
        let id = event.target.parentElement.parentElement.dataset.id;
        removeProductInCart(id);
      });
  });
}

function updatePrice(id, quantity) {
  const item = document.querySelector(`.cart__item[data-id='${id}']`);
  const cartPrice = item.querySelector(".cart__item-price");
  let product = products.filter(function (product) {
    return product.id === parseInt(id);
  });
  cartPrice.textContent = `$${(calculatePrice(product[0].price, product[0].discount) * quantity).toFixed(2)}`;
  displayCartFooter();
}

function removeProductInCart(id) {
  for (let i = 0; i < cart.length; i++) {
    if (cart[i].id === parseInt(id)) cart.splice(i, 1);
  }
  displayCartContent(cart);
}

const couponsAdded = [];
function handleAddCoupon() {
  // Adding Coupon
  const couponAddButton = cartCoupon.querySelector(".cart__coupon .cart__coupon-apply");

  const couponList = cartCoupon.querySelector(".cart__coupon-list");

  couponAddButton.addEventListener("click", function () {
    let couponCode = cartCoupon.querySelector(".cart__coupon-header .cart__coupon-input").value;
    couponCode = couponCode.toUpperCase();
    let couponItem = coupons.filter(function ({ code }) {
      return couponCode === code;
    });
    if (couponItem[0]) {
      couponsAdded.push(couponItem[0]);
      let { id, title, code, discount } = couponItem[0];
      let couponItemHTML = document.createElement("li");
      couponItemHTML.classList.add("cart__coupon-item");
      couponItemHTML.innerHTML = `<span><strong>-${discount}%</strong>${title}(${code})</span><button class="cart__coupon-remove"><i class='bx bxs-minus-circle'></i></button>`;
      couponList.appendChild(couponItemHTML);
      handelRemoveCoupon();
    } else console.log("Does not exist");
  });
  console.log(couponsAdded);
}

function handelRemoveCoupon() {
  const couponList = cartCoupon.querySelector(".cart__coupon-list");

  const couponRemoveButtons = couponList.querySelectorAll(".cart__coupon-remove");
  couponRemoveButtons.forEach(function (button) {
    button.addEventListener("click", function (event) {
      console.log(event.target);
    });
  });
}

displayCartContent(cart);
handleAddCoupon();
